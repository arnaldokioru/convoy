TODO

 - Select compiler/preprocessor for each source file based on config in 
   local package.

 - Add type for HTML5 manifest.
 - Add middleware server
 - Make sure watch works correctly when:
   - adding files to the copied area
   - modified a deeply required file
   - modifying the package.json for any affected package

 - figure out how to add assets from packages.
 - hook up to a real build task with a generator.
 - add support for templates
 - start to publish some packages that are includable


WORKFLOW

foo plugin - lists installed plugins
foo plugin add boilerplate - installs NPM package with plugin.
foo new ember HelloWorld
cd hello_world
foo add jquery - adds to package.json & installs via npm.
foo list
foo remove jquery
foo gen model MyApp.Person - adds a new file, etc.
foo test - automatically runs any test suite



use cases

// - BUILD HTML5 MANIFEST

// project with
hello_weather/
  client/
    css/
      foo
    models/
    views/
    controllers/
    assets/
    main.js


  server/
    index.js // used to launch the server. hosts the app with:

      connect()
        .use(nap.pipeline(require('../pipeline_config')).at('/'))

        // serves a consructed, minified widget
        .use(nap.widget('/app.widget', require('../pipeline_config')))

  pipeline_config.js
  package.json
  Jakefile


pipeline_config.js:

  module.exports = {
    'app.js': {
      type: 'javascript',
      main: './client/main.js'
    },

    'app.css': {
      type: 'css',
      main: './client/css'
    },

    'assets': {
      type: 'copy',
      main: './client/assets'
    },

    'index.html': {
      type: 'copy',
      main: './client/index.html'
    },

    'appcache.manifest': {
      type: 'appcache'
    }
  }

